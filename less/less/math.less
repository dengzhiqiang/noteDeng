/*ceil*/
//案例： ceil(2.4)
//输出： 3



/*floor*/
//案例： floor(2.6)
//输出： 2


/*percentage*/
//案例： percentage(0.5)
//输出： 50%



/*round*/
//四舍五入取整。
//案例： round(1.67)
//输出： 2
//
//案例： round(1.67, 1)
//输出： 1.7

/*pi*/

//返回圆周率 π (pi);
//参数： none
//案例：  pi()
//3.141592653589793


/*mod*/

//返回第一个参数对第二参数取余的结果。
//返回值与第一个参数单位相同，第二个参数单位被忽略。这个函数也可以处理负数和浮点数。

//number: 浮点数。
//number: 浮点数。
//返回值： 数字（number）

//案例：
//mod(0cm, 0px)
//mod(11cm, 6px);
//mod(-26%, -5);

/*min*/
//返回一系列值中最小的那个。
//案例： min(5, 10);
//输出： 5

//案例： min(3px, 42px, 1px, 16px);
//输出： 1px

/*max*/
//返回一系列值中最大的那个。
//案例： max(5, 10);
//输出： 10

//案例： max(3%, 42%, 1%, 16%);
//输出： 42%

/*percentage*/
//将浮点数转换为百分比字符串。
//参数： number - 浮点数。
//返回值： 字符串（string）

//案例： percentage(0.5)
//输出： 50%

